/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/antelope.glb 
Author: Nyilonelycompany (https://sketchfab.com/Nyilonelycompany)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/sable-antelope-low-poly-304b448c1b9b487c994f8b5686d5d056
Title: Sable Antelope (Low Poly)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { animationState = 'walk', ...restProps } = props
  const group = React.useRef()
  const { scene, animations } = useGLTF('/antelope.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  // Play animation based on state
  React.useEffect(() => {
    if (actions) {
      // Stop all animations first
      Object.values(actions).forEach(action => action.stop())

      // Play the appropriate animation
      let animationName = 'Walk' // Default animation name
      if (animationState === 'death') animationName = 'Die'
      else if (animationState === 'walk') animationName = 'Walk'

      if (actions[animationName]) {
        actions[animationName].play()
        if (animationState === 'death') {
          actions[animationName].setLoop(false, 1) // Play death animation once
        }
      }
    }
  }, [actions, animationState])

  return (
    <group ref={group} {...restProps} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.291}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Antelope_Rigao_49" scale={3.15}>
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group name="Antelope_47" />
                  <group name="Antelope001_48" />
                  <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.Mat_Antelope} skeleton={nodes.Object_7.skeleton} castShadow />
                  <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.Mat_Antelope} skeleton={nodes.Object_9.skeleton} castShadow />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/antelope.glb')
